import region.*
import centrales.*
import ciudades.*

describe "centrales" {
	
	test "burns con 10 varillas produce 1 Mkwh en springfield" {
		burns.varillas(10)
		assert.equals(burns.produccion(), 1)
	}
	
	test "exBosque con una capacidad de 20 toneladas produce 18.5 Mkwh en springfield" {
		exBosque.capacidad(20)
		assert.equals(exBosque.produccion(), 18.5)
	}
	
	test "elSuspiro produce 2 Mkwh en springfield" {
		assert.equals(elSuspiro.produccion(), 2)
	}
	
	test "Teniendo las centrales anteriores, las centrales contamintantes de sprinfield es una colección que adentro tiene sólo a exBosque"{
		burns.varillas(10)
		exBosque.capacidad(20)
		assert.equals(springfield.centralesContaminantes(), #{exBosque})
	}
	
	test "Teniendo las centrales anteriores, springfield cubrió su necesidad energética si ésta era de 20 Mkwh"{
		burns.varillas(10)
		exBosque.capacidad(20)
		springfield.necesidadEnergetica(20)
		assert.that(springfield.cubrioNecesidades())
	}
	
	test "Teniendo las centrales anteriores, springfield está al horno si posee una necesidad energética de 30 Mkwh"{
		burns.varillas(10)
		exBosque.capacidad(20)
		springfield.necesidadEnergetica(30)
		assert.that(springfield.estaEnElHorno())
	}

	test "Teniendo las centrales anteriores de springfield, las centrales más productoras de la región donde ésta se encuentra es una colección con exBosque de springfield y la central hidroeléctrica de albuquerque"{
		burns.varillas(10)
		exBosque.capacidad(20)
		assert.equals(region.masProductoras(), #{exBosque, hidroelectrica})
	}
}